{
  "branches": [
    "main",
    {
      "name": "rc",
      "prerelease": true
    }
  ],
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "releaseRules": [
          {"type": "feat", "release": "minor"},
          {"type": "fix", "release": "patch"},
          {"type": "perf", "release": "patch"},
          {"type": "revert", "release": "patch"},
          {"type": "docs", "scope": "README", "release": "patch"},
          {"type": "style", "release": false},
          {"type": "refactor", "release": "patch"},
          {"type": "test", "release": false},
          {"type": "build", "release": false},
          {"type": "ci", "release": false},
          {"type": "chore", "release": false},
          {"scope": "no-release", "release": false}
        ]
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            {"type": "feat", "section": "Features"},
            {"type": "fix", "section": "Bug Fixes"},
            {"type": "perf", "section": "Performance Improvements"},
            {"type": "revert", "section": "Reverts"},
            {"type": "docs", "section": "Documentation"},
            {"type": "refactor", "section": "Code Refactoring"}
          ]
        }
      }
    ],
    [
      "@semantic-release/changelog",
      {
        "changelogFile": "CHANGELOG.md"
      }
    ],
    [
      "@semantic-release/exec",
      {
        "prepareCmd": "scripts/update-version.sh ${nextRelease.version}"
      }
    ],
    [
      "@semantic-release/git",
      {
        "assets": ["CHANGELOG.md", "Sources/Helpers/Version.swift"],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }
    ],
    [
      "@semantic-release/github",
      {
        "assets": [],
        "successComment": "ðŸŽ‰ This issue has been resolved in version ${nextRelease.version} ðŸŽ‰\n\nThe release is available on [GitHub release](${releases.filter(release => !!release.name)[0].url})",
        "failComment": false,
        "failTitle": false,
        "labels": ["released"],
        "releasedLabels": ["released"]
      }
    ]
  ]
}
