name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - 'Examples/**'
      - '*.swift'
      - 'Package.swift'
      - 'Package.resolved'
      - '.github/workflows/ci.yml'
      - 'Makefile'
      - '*.xcodeproj/**'
      - '*.xcworkspace/**'
      - '.swiftpm/**'
  pull_request:
    branches:
      - "*"
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - 'Examples/**'
      - '*.swift'
      - 'Package.swift'
      - 'Package.resolved'
      - '.github/workflows/ci.yml'
      - 'Makefile'
      - '*.xcodeproj/**'
      - '*.xcworkspace/**'
      - '.swiftpm/**'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  macos:
    name: Build on macOS
    runs-on: ${{ matrix.runs-on }}
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # SPM Build Matrix
          - runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"

          - runs-on: macos-15
            xcode: "/Applications/Xcode_16.4.app"

          # macOS Build Matrix
          - type: macos
            runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"

          - type: macos
            runs-on: macos-15
            xcode: "/Applications/Xcode_16.4.app"
                      
          # iOS Build Matrix
          - type: ios
            runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"
            deviceName: "iPhone 17 Pro"
            osVersion: "26.0"
            download-platform: true

          # watchOS Build Matrix
          - type: watchos
            runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"
            deviceName: "Apple Watch Ultra 3 (49mm)"
            osVersion: "26.0"
            download-platform: true

          # tvOS Build Matrix
          - type: tvos
            runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"
            deviceName: "Apple TV"
            osVersion: "26.0"
            download-platform: true

          # visionOS Build Matrix              
          - type: visionos
            runs-on: macos-15
            xcode: "/Applications/Xcode_26.0.app"
            deviceName: "Apple Vision Pro"
            osVersion: "26.0"
            download-platform: true

    steps:
      - uses: actions/checkout@v5
      - name: Build and Test
        uses: brightdigit/swift-build@v1.3.0
        with:
          scheme: Supabase-Package
          type: ${{ matrix.type }}
          xcode: ${{ matrix.xcode }}
          deviceName: ${{ matrix.deviceName }}
          osVersion: ${{ matrix.osVersion }}
          download-platform: ${{ matrix.download-platform }}
      - name: Process coverage
        id: coverage-files
        continue-on-error: true
        uses: grdsdev/swift-coverage-action@eeab9a07a3e2b9ba1aac631e287fd2ac3faadd6a
        with:
          search-paths: |
            ./.build
            /Users/runner/work/_temp/DerivedData
            $HOME/Library/Developer/Xcode/DerivedData
          ignore-filename-regex: "/Users/|Tests/|.build|DerivedData|.derivedData|Deprecated/|Deprecated.swift"
      - name: Upload Coverage
        continue-on-error: true
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.COVERALLS_TOKEN }}
          files: ${{ join(fromJSON(steps.coverage-files.outputs.files), ' ') }}

  # linux:
  #   name: Build on Linux
  #   runs-on: ubuntu-latest
  #   container: ${{ format('swift:{0}', matrix.swift.version) }}
  #   if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       swift:
  #         - version: "6.2"
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: brightdigit/swift-build@v1.3.0
  #       with:
  #         scheme: Supabase-Package
  #     - uses: sersoft-gmbh/swift-coverage-action@v4
  #       id: coverage-files
  #       continue-on-error: true
  #       with:
  #         fail-on-empty-output: true
  #     - name: Upload Coverage
  #       continue-on-error: true
  #       uses: coverallsapp/github-action@v2.3.6
  #       with:
  #         github-token: ${{ secrets.COVERALLS_TOKEN }}
  #         files: ${{ join(fromJSON(steps.coverage-files.outputs.files), ' ') }}
          
  android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: "Remove IntegrationTests"
        run: rm -r Tests/IntegrationTests/*
      - name: "Test Swift Package"
        uses: skiptools/swift-android-action@v2
        with:
          # need to copy over the Tests folder because it contains __Snapshots__
          copy-files: Tests
          # tests are not yet passing on Android
          run-tests: false

  # library-evolution:
  #   name: Library (evolution)
  #   runs-on: macos-15
  #   strategy:
  #     matrix:
  #       xcode: ["16.3"]
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Select Xcode ${{ matrix.xcode }}
  #       run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
  #     - name: Build for library evolution
  #       run: make build-for-library-evolution

  examples:
    name: Examples
    runs-on: macos-15
    strategy:
      matrix: 
        include: 
          - scheme: Examples
          - scheme: SlackClone
          - scheme: UserManagement
    steps:
      - uses: actions/checkout@v5
      - name: Build and Test
        uses: brightdigit/swift-build@v1.3.0
        with:
          scheme: ${{ matrix.scheme }}
          working-directory: ./Examples

  docs:
    name: Test docs
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5
      - name: Test docs
        run: make test-docs
