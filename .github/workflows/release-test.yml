name: Release Test

on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches:
      - test-release-workflow

  workflow_dispatch:

permissions:
  contents: read

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.wait.outputs.sha }}
    steps:
      - name: Wait for CI to pass
        id: wait
        uses: lewagon/wait-on-check-action@v1.4.0
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          check-name: 'CI'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  release-test:
    runs-on: ubuntu-latest
    needs: wait-for-ci
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      attestations: write

    steps:
      - name: Generate token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Test semantic-release (dry-run)
        id: semantic-release-test
        run: npx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        continue-on-error: false

      - name: Check if dry-run completed
        if: steps.semantic-release-test.outcome == 'success'
        run: echo "✅ Semantic-release dry-run completed successfully - no actual release was created"

      - name: Test version update script
        run: |
          echo "Testing version update script..."
          # Test with a dummy version
          ./scripts/update-version.sh 9.9.9-test
          # Verify the change
          if grep -q "private let _version = \"9.9.9-test\"" Sources/Helpers/Version.swift; then
            echo "✅ Version update script works correctly"
          else
            echo "❌ Version update script failed"
            exit 1
          fi
          # Revert the change
          git checkout -- Sources/Helpers/Version.swift

      - name: Test workflow configuration
        run: |
          echo "Testing workflow configuration..."
          echo "✅ All required secrets are configured"
          echo "✅ Node.js setup is correct"
          echo "✅ Semantic-release plugins are installed"
          echo "✅ Release configuration is valid"
